{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/GitHub/textutils/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import About from './components/About';\n// import React, { useState } from 'react';\n// import Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n// function App() {\n//   const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type)=>{\n//       setAlert({\n//         msg: message,\n//         type: type\n//       })\n//       setTimeout(() => {\n//           setAlert(null);\n//       }, 1500);\n//   }\n\n//   const toggleMode = ()=>{\n//     if(mode === 'light'){\n//       setMode('dark');\n//       document.body.style.backgroundColor = '#042743';\n//       showAlert(\"Dark mode has been enabled\", \"success\");\n\n//     }\n//     else{\n//       setMode('light');\n//       document.body.style.backgroundColor = 'white';\n//       showAlert(\"Light mode has been enabled\", \"success\");\n//       // document.title = 'TextUtils - Light Mode';\n//     }\n//   }\n//   return (\n//     <>\n//     {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n//     {/* <Navbar/> */}\n//     <Router>\n//     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n//     <Alert alert={alert}/>\n//     <div className=\"container my-3\">\n//    <Routes>\n//           <Route exact path=\"/about\">\n//             <About />\n//           </Route>\n//           <Route exact path=\"/\">\n//             <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n//           </Route>\n//           </Routes>\n//     </div>\n//     </Router>\n//     </> \n//   );\n// }\n\n// export default App;\n\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route\n// Link\n} from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#38303D\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            showAlert: showAlert,\n            heading: \"Enter the text to analyze below\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ZI4CJvDB/5AqSfC56M12vAUheEc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","React","useState","Alert","BrowserRouter","Router","Routes","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"sources":["/home/asus/Documents/GitHub/textutils/src/App.js"],"sourcesContent":["// import './App.css';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import About from './components/About';\n// import React, { useState } from 'react';\n// import Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n \n// function App() {\n//   const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type)=>{\n//       setAlert({\n//         msg: message,\n//         type: type\n//       })\n//       setTimeout(() => {\n//           setAlert(null);\n//       }, 1500);\n//   }\n\n//   const toggleMode = ()=>{\n//     if(mode === 'light'){\n//       setMode('dark');\n//       document.body.style.backgroundColor = '#042743';\n//       showAlert(\"Dark mode has been enabled\", \"success\");\n     \n//     }\n//     else{\n//       setMode('light');\n//       document.body.style.backgroundColor = 'white';\n//       showAlert(\"Light mode has been enabled\", \"success\");\n//       // document.title = 'TextUtils - Light Mode';\n//     }\n//   }\n//   return (\n//     <>\n//     {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n//     {/* <Navbar/> */}\n//     <Router>\n//     <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n//     <Alert alert={alert}/>\n//     <div className=\"container my-3\">\n//    <Routes>\n//           <Route exact path=\"/about\">\n//             <About />\n//           </Route>\n//           <Route exact path=\"/\">\n//             <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n//           </Route>\n//           </Routes>\n//     </div>\n//     </Router>\n//     </> \n//   );\n// }\n\n// export default App;\n\n\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React,{useState} from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[alert,setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type ,\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1500)\n  }\n\n  const toggleMode = ()=>{\n    if(mode===\"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"#38303D\";\n    }else{\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n  \n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title = \"TextUtils\" mode= {mode} toggleMode = {toggleMode} />\n      <Alert alert= {alert} />\n      <div className=\"container\">\n        <Routes>\n          <Route exact path=\"/about\" element= {<About />}></Route>\n          <Route exact path=\"/\" element = {<TextForm showAlert= {showAlert} heading = \"Enter the text to analyze below\" mode={mode}/>}></Route>\n        </Routes>\n        {/* <TextForm showAlert= {showAlert} heading = \"Enter the text to analyze below\" mode={mode} /> */}\n        {/* <About /> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC;AACA;AAAA,OACK,kBAAkB;AAAC;AAAA;AAE1B,SAASC,GAAG,GAAG;EAAA;EACb,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAK,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,SAAS,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAI;MACbL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EAED,MAAMM,UAAU,GAAG,MAAI;IACrB,IAAGT,IAAI,KAAG,OAAO,EAAE;MACjBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;IACjD,CAAC,MAAI;MACHZ,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C;EACF,CAAC;EAED,oBACE;IAAA,wBAEE,QAAC,MAAM;MAAC,KAAK,EAAG,WAAW;MAAC,IAAI,EAAGb,IAAK;MAAC,UAAU,EAAIS;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACrE,QAAC,KAAK;MAAC,KAAK,EAAGP;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACxB;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,eAAG,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eACxD,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAI,QAAC,QAAQ;YAAC,SAAS,EAAGE,SAAU;YAAC,OAAO,EAAG,iCAAiC;YAAC,IAAI,EAAEJ;UAAK;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAC9H;MAAA;MAAA;MAAA;IAAA,QAGL;EAAA,gBAEL;AAEP;AAAC,GAxCQD,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}