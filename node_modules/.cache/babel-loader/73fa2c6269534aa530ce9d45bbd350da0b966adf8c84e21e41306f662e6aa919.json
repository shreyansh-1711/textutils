{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/GitHub/textutils/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar.js';\nimport TextForm from './components/TextForm.js';\n// import About from './components/About.js'\nimport Alert from './components/Alert.js';\nimport { useState } from 'react';\nimport React from \"react\";\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); //whether the dark mode is on or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey ';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      showAlert: showAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","Alert","useState","React","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor"],"sources":["/home/asus/Documents/GitHub/textutils/src/App.js"],"sourcesContent":["import './App.css';\n\nimport Navbar from './components/Navbar.js'\nimport TextForm from './components/TextForm.js'\n// import About from './components/About.js'\nimport Alert from './components/Alert.js'\nimport { useState } from 'react';\nimport React from \"react\";\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether the dark mode is on or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey ';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    \n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n     \n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} showAlert={showAlert} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>}></Route> */}\n          <TextForm />\n          {/* <Route exact path=\"/\" element={<TextForm/>}> */}\n          {/* </Route> */}\n        {/* </Routes> */}\n        {/* <About></About> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAElB,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C;AACA,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMO,SAAS,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EACD,MAAME,UAAU,GAAG,MAAM;IACvB,IAAIR,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IAEpD,CAAC,MAAM;MACLH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IAErD;EACF,CAAC;EACD,oBACE;IAAA,wBAEE,QAAC,MAAM;MAAC,KAAK,EAAC,WAAW;MAAC,IAAI,EAAEJ,IAAK;MAAC,UAAU,EAAEQ,UAAW;MAAC,SAAS,EAAEJ;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACtF,QAAC,KAAK;MAAC,KAAK,EAAEF;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACvB;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAG3B,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAKV;EAAA,gBAEL;AAEP;AAAC,GAvCQH,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}