{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/GitHub/textutils/src/components/TextForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// // import PropTypes from 'prop-types'\n\n// export default function TextForm(props) {\n\n//     const handleOnChange = (event) => {\n//         // console.log(\"On Click was clicked\");\n//         setText(event.target.value);\n//     }\n\n//     const handleUpClick = () => {\n//         // console.log(\"On Click was clicked\" + text);\n//         let newText = text.toUpperCase()\n//         setText(newText)\n\n//     }\n//     const handleLoClick = () => {\n//         // console.log(\"On Click was clicked\" + text);\n//         let newText = text.toLowerCase()\n//         setText(newText)\n\n//     }\n\n//     const [text, setText] = useState('Enter Text here');\n//     return (\n//         <>\n//         <div className=\"container\" style={{color : props.mode==='dark'?'grey':'black'}}>\n//             <h1> {props.heading} </h1>\n//             <div className=\"mb-3\">\n//                 {/* <label for=\"myBox\" className=\"form-label\">Enter Your Text</label> */}\n//                 <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode==='dark'?'grey':'white'}} id=\"myBox\" rows=\"8\"></textarea>\n//             </div>\n//             <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To upper case</button>\n//             <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert To Lower case</button>\n\n//         </div>\n\n//         <div className=\"container my-4\">\n//             <h1>Your Text Summary</h1>\n//             <h3>{text.split(\" \").length} Words and {text.length} Character</h3>\n//             <p>{0.008 * text.split(\" \").length} Minutes</p>\n//             <h2>Preview</h2>\n//             <p>{text}</p>\n\n//         </div>\n//         </>\n//     )\n\n// }\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const upperCaseClick = () => {\n    setText(text.toUpperCase());\n    props.showAlert(\"Converted to uppercase\", \"success\");\n  };\n  const lowerCaseClick = () => {\n    setText(text.toLowerCase());\n    props.showAlert(\"Converted to lowercase\", \"success\");\n  };\n  const clearClick = () => {\n    setText(\"\");\n    props.showAlert(\"Text Cleared\", \"success\");\n  };\n  const speakClick = () => {\n    let msg = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(msg);\n  };\n  const extraSpaceClick = () => {\n    setText(text.split(/[ ]+/).join(\" \"));\n    props.showAlert(\"Removed all extra spaces\", \"success\");\n  };\n  const replaceClick = () => {\n    let toReplace = prompt(\"Enter text to be replaced : \");\n    let toreplace = new RegExp(toReplace, 'g');\n    let toReplaceWith = prompt(\"Enter the text you want to replace with : \");\n    setText(text.replace(toreplace, toReplaceWith));\n    props.showAlert(`Replaced all occourances of ${toReplace} with ${toReplaceWith}`, \"success\");\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#38303D'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#38303D' : 'white',\n            color: props.mode === 'dark' ? 'white' : '#38303D'\n          },\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-warning mx-2 my-1\",\n        onClick: speakClick,\n        children: \"Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-danger mx-2 my-1\",\n        onClick: clearClick,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-2 my-1\",\n        onClick: upperCaseClick,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-2 my-1\",\n        onClick: lowerCaseClick,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-2 my-1\",\n        onClick: replaceClick,\n        children: \"Change all occourances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-2 my-1\",\n        onClick: extraSpaceClick,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#38303D'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(/\\s+/).filter(ele => {\n          return ele.length !== 0;\n        }).length, \" words and \", text.length, \" characters.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average time to read this text -- \", 0.008 * text.split(/\\s+/).filter(ele => {\n          return ele.length !== 0;\n        }).length, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Nothing to Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","upperCaseClick","setText","text","toUpperCase","showAlert","lowerCaseClick","toLowerCase","clearClick","speakClick","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","extraSpaceClick","split","join","replaceClick","toReplace","prompt","toreplace","RegExp","toReplaceWith","replace","handleOnChange","event","target","value","color","mode","heading","backgroundColor","length","filter","ele"],"sources":["/home/asus/Documents/GitHub/textutils/src/components/TextForm.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// // import PropTypes from 'prop-types'\n\n\n// export default function TextForm(props) {\n\n//     const handleOnChange = (event) => {\n//         // console.log(\"On Click was clicked\");\n//         setText(event.target.value);\n//     }\n\n//     const handleUpClick = () => {\n//         // console.log(\"On Click was clicked\" + text);\n//         let newText = text.toUpperCase()\n//         setText(newText)\n\n//     }\n//     const handleLoClick = () => {\n//         // console.log(\"On Click was clicked\" + text);\n//         let newText = text.toLowerCase()\n//         setText(newText)\n\n//     }\n\n\n//     const [text, setText] = useState('Enter Text here');\n//     return (\n//         <>\n//         <div className=\"container\" style={{color : props.mode==='dark'?'grey':'black'}}>\n//             <h1> {props.heading} </h1>\n//             <div className=\"mb-3\">\n//                 {/* <label for=\"myBox\" className=\"form-label\">Enter Your Text</label> */}\n//                 <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode==='dark'?'grey':'white'}} id=\"myBox\" rows=\"8\"></textarea>\n//             </div>\n//             <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To upper case</button>\n//             <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert To Lower case</button>\n\n//         </div>\n\n//         <div className=\"container my-4\">\n//             <h1>Your Text Summary</h1>\n//             <h3>{text.split(\" \").length} Words and {text.length} Character</h3>\n//             <p>{0.008 * text.split(\" \").length} Minutes</p>\n//             <h2>Preview</h2>\n//             <p>{text}</p>\n\n//         </div>\n//         </>\n//     )\n\n// }\n\n\nimport React,{useState} from 'react'\n\nexport default function TextForm(props) {\n\n  const upperCaseClick = ()=>{\n    setText(text.toUpperCase())\n    props.showAlert(\"Converted to uppercase\",\"success\")\n  }\n  const lowerCaseClick = ()=>{\n    setText(text.toLowerCase())\n    props.showAlert(\"Converted to lowercase\",\"success\")\n  }\n  const clearClick = ()=>{\n    setText(\"\")\n    props.showAlert(\"Text Cleared\",\"success\")\n  }\n  const speakClick = ()=>{\n    let msg = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(msg);\n  }\n  const extraSpaceClick = ()=>{\n    setText((text.split(/[ ]+/)).join(\" \"))\n    props.showAlert(\"Removed all extra spaces\",\"success\")\n  }\n  const replaceClick = ()=>{\n    let toReplace = prompt(\"Enter text to be replaced : \")\n    let toreplace = new RegExp(toReplace,'g')\n    let toReplaceWith = prompt(\"Enter the text you want to replace with : \")\n    setText(text.replace(toreplace,toReplaceWith))\n    props.showAlert(`Replaced all occourances of ${toReplace} with ${toReplaceWith}`,\"success\")\n  }\n  const handleOnChange = (event)=>{\n    setText(event.target.value)\n  }\n  const [text,setText] = useState(\"\");\n  return (\n    <>\n        <div className=\"container\" style= {{color : props.mode ==='dark' ? 'white' : '#38303D'}}>\n            <h1 className= \"my-3\" >{props.heading}</h1>\n            <div className=\"mb-3\">\n                <textarea className=\"form-control\" style= {{backgroundColor : props.mode ==='dark' ? '#38303D' : 'white', color :props.mode ==='dark' ? 'white' : '#38303D' }} value = {text} onChange = {handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled= {text.length=== 0} className = \"btn btn-warning mx-2 my-1\" onClick={speakClick}>Speak</button>\n            <button disabled= {text.length=== 0} className = \"btn btn-danger mx-2 my-1\" onClick={clearClick}>Clear</button>\n            <button disabled= {text.length=== 0} className = \"btn btn-primary mx-2 my-1\" onClick={upperCaseClick}>Convert to UpperCase</button>\n            <button disabled= {text.length=== 0} className = \"btn btn-primary mx-2 my-1\" onClick={lowerCaseClick}>Convert to LowerCase</button>\n            <button disabled= {text.length=== 0} className = \"btn btn-primary mx-2 my-1\" onClick={replaceClick}>Change all occourances</button>\n            <button disabled= {text.length=== 0} className = \"btn btn-primary mx-2 my-1\" onClick={extraSpaceClick}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-5\" style= {{color : props.mode ==='dark' ? 'white' : '#38303D'}}>\n            <h3>Your text summary</h3>\n            <p>{text.split(/\\s+/).filter((ele)=>{return ele.length !== 0}).length} words and {text.length} characters.</p>\n            <p>Average time to read this text -- {0.008 * text.split(/\\s+/).filter((ele)=>{return ele.length !== 0}).length} minutes</p>\n            <h4>Preview</h4>\n            <p>{text.length >0 ? text :\"Nothing to Preview\"}</p>\n        </div>\n    </>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}